# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#####################
# FIRST PROMPT LINE #
#####################
NC='\e[0m'
echo -e "ZSH${NC} ${ZSH_VERSION}"

#####################
# ZINIT             #
#####################
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    command mkdir -p $HOME/.zinit
    command git clone https://github.com/zdharma-continuum/zinit $HOME/.zinit/bin
fi
source "$HOME/.zinit/bin/zinit.zsh"

#####################
# THEME             #
#####################
zinit ice depth=1; zinit light romkatv/powerlevel10k

#####################
# PLUGINS           #
#####################
# SYNTAX HIGHLIGHTING
zinit ice wait lucid atinit="zpcompinit;zpcdreplay"
zinit light zdharma-continuum/fast-syntax-highlighting

zinit wait lucid light-mode for \
  atinit"zicompinit; zicdreplay" \
      zdharma-continuum/fast-syntax-highlighting \
  atload'_zsh_autosuggest_start; bindkey "^ " autosuggest-accept' \
      zsh-users/zsh-autosuggestions \
  blockf atpull'zinit creinstall -q .' \
      zsh-users/zsh-completions

# TAB COMPLETIONS
zstyle ':completion:*' completer _expand _complete _ignored _approximate
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*:descriptions' format '-- %d --'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# FZF-TAB
zinit ice wait lucid
zinit light Aloxaf/fzf-tab

source /usr/share/doc/fzf/examples/key-bindings.zsh
source /usr/share/doc/fzf/examples/completion.zsh

# DELTA
zinit ice lucid wait="0" as="program" from="gh-r" bpick="*amd64.deb" pick="usr/bin/delta"
zinit light dandavison/delta

# GLOW
zinit ice lucid wait"0" as"program" from"gh-r" bpick='*linux_amd64.deb' pick"usr/bin/glow"
zinit light charmbracelet/glow

# ENHANCD
zinit ice wait="0" lucid
zinit light b4b4r07/enhancd
export ENHANCD_FILTER=fzf:fzy:peco

# CROC
zinit ice lucid wait="0" as="program" from="gh-r" bpick="*64bit*"
zinit light schollz/croc

# EXA
zinit ice wait="0" lucid from="gh-r" as="program" mv="bin/exa* -> exa"
zinit light ogham/exa
zinit ice wait blockf atpull'zinit creinstall -q .'

#####################
# HISTORY           #
#####################
[ -z "$HISTFILE" ] && HISTFILE="$HOME/.zsh_history"
HISTSIZE=100000
SAVEHIST=$HISTSIZE

#####################
# SETOPT            #
#####################
setopt extended_history       # record timestamp of command in HISTFILE
setopt hist_expire_dups_first # delete duplicates first when HISTFILE size exceeds HISTSIZE
setopt hist_ignore_all_dups   # ignore duplicated commands history list
setopt hist_ignore_space      # ignore commands that start with space
setopt hist_verify            # show command with history expansion to user before running it
setopt inc_append_history     # add commands to HISTFILE in order of execution
setopt share_history          # share command history data
setopt always_to_end          # cursor moved to the end in full completion when completing from the middle of a word, move the cursor to the end of the word
setopt complete_in_word       # allow completion from within a word/phrase
setopt complete_aliases
setopt list_ambiguous         # complete as much of a completion until it gets ambiguous.
setopt no_hup
setopt no_listbeep
# setopt nolisttypes
setopt listpacked
setopt automenu
unsetopt BEEP
setopt vi

#####################
# ENV VARIABLE      #
#####################
export EDITOR='nvim'
export VISUAL=$EDITOR
export PAGER='less'
export SHELL='/bin/zsh'
export BAT_THEME="gruvbox-dark"
# export TERM='screen-256color'
# if [[ ! $(tmux ls) ]] 2> /dev/null; then 
#   tmux new -s Î»
# fi

#####################
# COLORING          #
#####################
# autoload colors && colors

# BAT
zinit ice from="gh-r" as="program" pick="usr/bin/bat" bpick="*amd64.deb" atload="alias cat=bat"
zinit light sharkdp/bat
# BAT-EXTRAS
zinit ice lucid wait="1" as="program" pick="src/batgrep.sh"
zinit ice lucid wait="1" as="program" pick="src/batdiff.sh"
zinit light eth-p/bat-extras
alias rg=batgrep.sh
alias bd=batdiff.sh
alias man=batman.sh

#####################
# FZF SETTINGS      #
#####################
export FZF_DEFAULT_OPTS="
--layout=reverse
--info=inline
--height=50%
--multi
--preview-window=right
--preview '([[ -f {} ]] && (bat --style=numbers --color=always --theme=gruvbox-dark --line-range :500 {} || cat {})) || ([[ -d {} ]] && (tree -C {} | less)) || echo {} 2> /dev/null | head -200'
--bind 'ctrl-e:execute(nvim {} < /dev/tty > /dev/tty 2>&1)' > selected
--bind 'ctrl-v:execute(code {+})'"
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow -g "!{.git,node_modules}/*" 2> /dev/null'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

#####################
# PATH              #
#####################
export PATH=$PATH:/usr/local/opt/grep/libexec/gnubin
export PATH=$PATH:/usr/local/sbin
export PATH=$PATH:$DOTFILES/bin
export PATH=$PATH:$HOME/.local/scripts
export PATH=$PATH:$HOME/.cargo/bin
export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin:~/.local/bin:~/bin

#####################
# P10K SETTINGS     #
#####################
[[ -f ~/.p10k.zsh ]] && source ~/.p10k.zsh

# Z
. ~/z/z.sh

# Tmux sessionizer
bindkey -s ^f "tmux-sessionizer\n"

# Make lase word uppercase
bindkey -s ^o "^[bgUiwea"

########################################################
# Aliases
########################################################

# use nvim, but don't make me think about it
alias vi="nvim"

# Filesystem aliases
alias ..='cd ..'
alias ...='cd ../..'
alias ....="cd ../../.."
alias .....="cd ../../../.."

alias l="exa -laF --icons"
alias ld="exa -laD"
alias ltd="exa -lTFD --git-ignore"
alias lt="exa -lTF --git-ignore --icons"
alias lta="exa -laTF --git-ignore --icons -I .git"
alias rmf="rm -rf"

# Recursively delete `.DS_Store` files
alias cleanup="find . -name '*.DS_Store' -type f -ls -delete"
# remove broken symlinks
alias clsym="find -L . -name . -o -type d -prune -o -type l -exec rm {} +"

# tmux aliases
alias ta='tmux attach'

# Open browser from wsl 
if [[ $(uname -r) =~ WSL ]]; then
  alias open='wslview'
  export BROWSER=wslview
fi

export DOTFILES="$HOME/.dotfiles"
export DOCUMENTS='/mnt/c/Documents and Settings/Franc/Documents'
export DOWNLOADS='/mnt/c/Documents and Settings/Franc/Downloads'

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
PATH=~/.local/bin:$PATH
